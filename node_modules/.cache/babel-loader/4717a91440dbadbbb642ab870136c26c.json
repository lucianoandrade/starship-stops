{"ast":null,"code":"import React, { useState } from \"react\";\nimport Pesquisar from \"../components/Pesquisar\";\nimport Listar from \"../components/Listar\";\nimport Navegacao from \"../components/Navegacao\";\nimport youtube from \"../services/youtube\";\nexport default (() => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [pageInfo, setPageInfo] = useState(\"CAUQAA\");\n  const [nextPageToken, setnextPageToken] = useState(\"\");\n  const [prevPageToken, setprevPageToken] = useState(\"\");\n  const [termBusca, setTermBusca] = useState(\"\");\n\n  async function handleSubmit(term) {\n    const response = await youtube.get(\"search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 5,\n        pageToken: pageInfo,\n        key: \"AIzaSyDqB66f3MzBt6Z0A1rMXhmI1ciWEOMs0Tw\",\n        q: term\n      }\n    });\n    setnextPageToken(response.data.nextPageToken);\n    setprevPageToken(response.data.prevPageToken);\n    setTermBusca(term);\n    setVideos(response.data.items);\n    setSelectedVideo(response.data.items[0]);\n  }\n\n  const navegation = e => {\n    if (e.target.value === \"Proximo\") {\n      setPageInfo(nextPageToken);\n    } else {\n      setPageInfo(prevPageToken);\n    }\n\n    return handleSubmit(termBusca);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ships);\n});","map":{"version":3,"sources":["/home/pi/Desktop/coding/teste-nata-house/starship-stops/src/components/ListStarship/index.js"],"names":["React","useState","Pesquisar","Listar","Navegacao","youtube","videos","setVideos","selectedVideo","setSelectedVideo","pageInfo","setPageInfo","nextPageToken","setnextPageToken","prevPageToken","setprevPageToken","termBusca","setTermBusca","handleSubmit","term","response","get","params","part","maxResults","pageToken","key","q","data","items","navegation","e","target","value","ships"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,gBAAe,MAAM;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,QAAD,CAAxC;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeiB,YAAf,CAA4BC,IAA5B,EAAkC;AAChC,UAAMC,QAAQ,GAAG,MAAMf,OAAO,CAACgB,GAAR,CAAY,QAAZ,EAAsB;AAC3CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,SADA;AAENC,QAAAA,UAAU,EAAE,CAFN;AAGNC,QAAAA,SAAS,EAAEf,QAHL;AAINgB,QAAAA,GAAG,EAAE,yCAJC;AAKNC,QAAAA,CAAC,EAAER;AALG;AADmC,KAAtB,CAAvB;AAUAN,IAAAA,gBAAgB,CAACO,QAAQ,CAACQ,IAAT,CAAchB,aAAf,CAAhB;AACAG,IAAAA,gBAAgB,CAACK,QAAQ,CAACQ,IAAT,CAAcd,aAAf,CAAhB;AACAG,IAAAA,YAAY,CAACE,IAAD,CAAZ;AAEAZ,IAAAA,SAAS,CAACa,QAAQ,CAACQ,IAAT,CAAcC,KAAf,CAAT;AACApB,IAAAA,gBAAgB,CAACW,QAAQ,CAACQ,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAD,CAAhB;AACD;;AAED,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACtB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,KAAmB,SAAvB,EAAkC;AAChCtB,MAAAA,WAAW,CAACC,aAAD,CAAX;AACD,KAFD,MAEO;AACLD,MAAAA,WAAW,CAACG,aAAD,CAAX;AACD;;AACD,WAAOI,YAAY,CAACF,SAAD,CAAnB;AACD,GAPD;;AASA,sBACE,0CACGkB,KADH,CADF;AAKD,CA1CD","sourcesContent":["import React, { useState } from \"react\";\nimport Pesquisar from \"../components/Pesquisar\";\nimport Listar from \"../components/Listar\";\nimport Navegacao from \"../components/Navegacao\";\nimport youtube from \"../services/youtube\";\n\nexport default () => {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const [pageInfo, setPageInfo] = useState(\"CAUQAA\");\n  const [nextPageToken, setnextPageToken] = useState(\"\");\n  const [prevPageToken, setprevPageToken] = useState(\"\");\n  const [termBusca, setTermBusca] = useState(\"\");\n\n  async function handleSubmit(term) {\n    const response = await youtube.get(\"search\", {\n      params: {\n        part: \"snippet\",\n        maxResults: 5,\n        pageToken: pageInfo,\n        key: \"AIzaSyDqB66f3MzBt6Z0A1rMXhmI1ciWEOMs0Tw\",\n        q: term\n      }\n    });\n\n    setnextPageToken(response.data.nextPageToken);\n    setprevPageToken(response.data.prevPageToken);\n    setTermBusca(term);\n\n    setVideos(response.data.items);\n    setSelectedVideo(response.data.items[0]);\n  }\n\n  const navegation = e => {\n    if (e.target.value === \"Proximo\") {\n      setPageInfo(nextPageToken);\n    } else {\n      setPageInfo(prevPageToken);\n    }\n    return handleSubmit(termBusca);\n  };\n\n  return (\n    <>\n      {ships}\n    </>\n  );\n};"]},"metadata":{},"sourceType":"module"}