{"ast":null,"code":"var _jsxFileName = \"/home/pi/Desktop/coding/starship-stops/src/pages/Home/index.js\";\nimport React, { useState } from \"react\";\nimport Header from \"../../components/Header\";\nimport DistanceEntry from \"../../components/DistanceEntry\";\nimport ListStarship from \"../../components/ListStarship\";\nimport ListShips from \"../../services\";\n\nfunction Home() {\n  const [shipsAll, setShipsAll] = useState([]); //const [distance, setDistance] = useState(0);\n  //'const [stopsShip, setStopsShip] = useState(0);\n\n  async function handleSubmit() {\n    await ListShips.get(`?page=${page}`).then(result => {\n      if (result.data.next) {\n        hasNext = true;\n        page++;\n      } else {\n        hasNext = false;\n      }\n\n      result.data.results.map(ship => {\n        const consumables = ship.consumables.split(' ');\n        let time = 0;\n\n        switch (consumables[1]) {\n          case 'day':\n          case 'days':\n            time = parseInt(consumables[0]) * 24;\n            break;\n\n          case 'week':\n          case 'weeks':\n            time = parseInt(consumables[0]) * 168;\n            break;\n\n          case 'month':\n          case 'months':\n            time = parseInt(consumables[0]) * 730;\n            break;\n\n          case 'year':\n          case 'years':\n            time = parseInt(consumables[0]) * 8760;\n            break;\n\n          default:\n            time = 0;\n            break;\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DistanceEntry, {\n    distanceMglt: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListStarship, {\n    allShips: shipsAll,\n    stops: stops,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Home;\nawait ListShips.get(`?page=${page}`).then(result => {\n  if (result.data.next) {\n    hasNext = true;\n    page++;\n  } else {\n    hasNext = false;\n  }\n\n  result.data.results.map(ship => {\n    const consumables = ship.consumables.split(' ');\n    let time = 0;\n\n    switch (consumables[1]) {\n      case 'day':\n      case 'days':\n        time = parseInt(consumables[0]) * 24;\n        break;\n\n      case 'week':\n      case 'weeks':\n        time = parseInt(consumables[0]) * 168;\n        break;\n\n      case 'month':\n      case 'months':\n        time = parseInt(consumables[0]) * 730;\n        break;\n\n      case 'year':\n      case 'years':\n        time = parseInt(consumables[0]) * 8760;\n        break;\n\n      default:\n        time = 0;\n        break;\n    }\n  });\n});","map":{"version":3,"sources":["/home/pi/Desktop/coding/starship-stops/src/pages/Home/index.js"],"names":["React","useState","Header","DistanceEntry","ListStarship","ListShips","Home","shipsAll","setShipsAll","handleSubmit","get","page","then","result","data","next","hasNext","results","map","ship","consumables","split","time","parseInt","stops"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,SAASC,IAAT,GAAgB;AAEZ,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC,CAFY,CAGZ;AACA;;AAEA,iBAAeQ,YAAf,GAA8B;AAC1B,UAAMJ,SAAS,CAACK,GAAV,CAAe,SAAQC,IAAK,EAA5B,EAA+BC,IAA/B,CAAqCC,MAAD,IAAY;AAClD,UAAIA,MAAM,CAACC,IAAP,CAAYC,IAAhB,EAAsB;AAClBC,QAAAA,OAAO,GAAG,IAAV;AACAL,QAAAA,IAAI;AACP,OAHD,MAGO;AACHK,QAAAA,OAAO,GAAG,KAAV;AACH;;AAEDH,MAAAA,MAAM,CAACC,IAAP,CAAYG,OAAZ,CAAoBC,GAApB,CAAwBC,IAAI,IAAI;AAC5B,cAAMC,WAAW,GAAGD,IAAI,CAACC,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,CAApB;AACA,YAAIC,IAAI,GAAG,CAAX;;AAEA,gBAAQF,WAAW,CAAC,CAAD,CAAnB;AACA,eAAK,KAAL;AACI,eAAK,MAAL;AACAE,YAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,EAAlC;AACA;;AACA,eAAK,MAAL;AACJ,eAAK,OAAL;AACQE,YAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,GAAlC;AACJ;;AACA,eAAK,OAAL;AACA,eAAK,QAAL;AACAE,YAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,GAAlC;AACA;;AACA,eAAK,MAAL;AACJ,eAAK,OAAL;AACQE,YAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,IAAlC;AACA;;AACR;AACQE,YAAAA,IAAI,GAAG,CAAP;AACJ;AAnBJ;AAqBH,OAzBD;AA0BH,KAlCK,CAAN;AAoCH;;AAED,sBACI,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAEb,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEF,QAAxB;AAAkC,IAAA,KAAK,EAAEiB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AACD,eAAelB,IAAf;AAGI,MAAMD,SAAS,CAACK,GAAV,CAAe,SAAQC,IAAK,EAA5B,EAA+BC,IAA/B,CAAqCC,MAAD,IAAY;AAClD,MAAIA,MAAM,CAACC,IAAP,CAAYC,IAAhB,EAAsB;AAClBC,IAAAA,OAAO,GAAG,IAAV;AACAL,IAAAA,IAAI;AACP,GAHD,MAGO;AACHK,IAAAA,OAAO,GAAG,KAAV;AACH;;AAEDH,EAAAA,MAAM,CAACC,IAAP,CAAYG,OAAZ,CAAoBC,GAApB,CAAwBC,IAAI,IAAI;AAC5B,UAAMC,WAAW,GAAGD,IAAI,CAACC,WAAL,CAAiBC,KAAjB,CAAuB,GAAvB,CAApB;AACA,QAAIC,IAAI,GAAG,CAAX;;AAEA,YAAQF,WAAW,CAAC,CAAD,CAAnB;AACA,WAAK,KAAL;AACI,WAAK,MAAL;AACAE,QAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,EAAlC;AACA;;AACA,WAAK,MAAL;AACJ,WAAK,OAAL;AACQE,QAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,GAAlC;AACJ;;AACA,WAAK,OAAL;AACA,WAAK,QAAL;AACAE,QAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,GAAlC;AACA;;AACA,WAAK,MAAL;AACJ,WAAK,OAAL;AACQE,QAAAA,IAAI,GAAGC,QAAQ,CAACH,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,IAAlC;AACA;;AACR;AACQE,QAAAA,IAAI,GAAG,CAAP;AACJ;AAnBJ;AAqBH,GAzBD;AA0BH,CAlCK,CAAN","sourcesContent":["import React, {useState} from \"react\";\nimport Header from \"../../components/Header\";\nimport DistanceEntry from \"../../components/DistanceEntry\";\nimport ListStarship from \"../../components/ListStarship\";\nimport ListShips from \"../../services\";\n\nfunction Home() {\n\n    const [shipsAll, setShipsAll] = useState([]);\n    //const [distance, setDistance] = useState(0);\n    //'const [stopsShip, setStopsShip] = useState(0);\n\n    async function handleSubmit() {\n        await ListShips.get(`?page=${page}`).then((result) => {\n            if (result.data.next) {\n                hasNext = true;\n                page++;\n            } else {\n                hasNext = false;\n            }\n    \n            result.data.results.map(ship => {\n                const consumables = ship.consumables.split(' ');\n                let time = 0;\n    \n                switch (consumables[1]) {\n                case 'day':\n                    case 'days':\n                    time = parseInt(consumables[0]) * 24;\n                    break;\n                    case 'week':\n                case 'weeks':\n                        time = parseInt(consumables[0]) * 168;\n                    break;\n                    case 'month':\n                    case 'months':\n                    time = parseInt(consumables[0]) * 730;\n                    break;\n                    case 'year':\n                case 'years':\n                        time = parseInt(consumables[0]) * 8760;\n                        break;\n                default:\n                        time = 0;\n                    break;\n                }\n            });\n        });\n\n    }\n\n    return (\n        <>\n            <Header />\n            <DistanceEntry distanceMglt={handleSubmit}/>\n            <ListStarship allShips={shipsAll} stops={stops} />\n        </>\n    )\n}\nexport default Home;\n\n\n    await ListShips.get(`?page=${page}`).then((result) => {\n        if (result.data.next) {\n            hasNext = true;\n            page++;\n        } else {\n            hasNext = false;\n        }\n\n        result.data.results.map(ship => {\n            const consumables = ship.consumables.split(' ');\n            let time = 0;\n\n            switch (consumables[1]) {\n            case 'day':\n                case 'days':\n                time = parseInt(consumables[0]) * 24;\n                break;\n                case 'week':\n            case 'weeks':\n                    time = parseInt(consumables[0]) * 168;\n                break;\n                case 'month':\n                case 'months':\n                time = parseInt(consumables[0]) * 730;\n                break;\n                case 'year':\n            case 'years':\n                    time = parseInt(consumables[0]) * 8760;\n                    break;\n            default:\n                    time = 0;\n                break;\n            }\n        });\n    });\n"]},"metadata":{},"sourceType":"module"}