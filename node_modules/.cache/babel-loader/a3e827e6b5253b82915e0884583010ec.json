{"ast":null,"code":"var _jsxFileName = \"/home/pi/Desktop/coding/starship-stops/src/components/ListStarship/index.js\";\nimport React from \"react\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport './styles.scss';\n\nfunction ListStarships(props) {\n  const [timeCool, setTimeCool] = useState(0);\n\n  const stops = () => {\n    const consumables = props.allShips.map(item => item && item.consumables ? item.consumables.split(' ') : undefined);\n\n    switch (consumables[1]) {\n      case 'day':\n      case 'days':\n        setTimeCool(parseInt(consumables[0]) * 24);\n        break;\n\n      case 'week':\n      case 'weeks':\n        setTimeCool(parseInt(consumables[0]) * 168);\n        break;\n\n      case 'month':\n      case 'months':\n        setTimeCool(parseInt(consumables[0]) * 730);\n        break;\n\n      case 'year':\n      case 'years':\n        setTimeCool(parseInt(consumables[0]) * 8760);\n        break;\n\n      default:\n        setTimeCool(0);\n        break;\n    }\n\n    if (ship.MGLT != 'unknown') {\n      ships.push({\n        mglt: ship.MGLT,\n        consumables: time,\n        name: ship.name\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    \"aria-label\": \"main mailbox folders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.allShips.map(item => item && item.name ? /*#__PURE__*/React.createElement(ListItem, {\n    className: \"ships\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"shipsName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, item.name, \" - Will make \", 1000000 / (item.MGLT * stops(item.consumables)), \" \", console.log(stops(item.consumables)), \"stops\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 27\n    }\n  })))));\n}\n\n;\nexport default ListStarships;","map":{"version":3,"sources":["/home/pi/Desktop/coding/starship-stops/src/components/ListStarship/index.js"],"names":["React","List","ListItem","ListItemText","ListStarships","props","timeCool","setTimeCool","useState","stops","consumables","allShips","map","item","split","undefined","parseInt","ship","MGLT","ships","push","mglt","time","name","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAO,eAAP;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,CAAD,CAAxC;;AACA,QAAMC,KAAK,GAAG,MAAM;AACjB,UAAMC,WAAW,GAAGL,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,IAAIA,IAAI,CAACH,WAAb,GAC9CG,IAAI,CAACH,WAAL,CAAiBI,KAAjB,CAAuB,GAAvB,CAD8C,GAChBC,SADX,CAApB;;AAGC,YAAQL,WAAW,CAAC,CAAD,CAAnB;AACF,WAAK,KAAL;AACC,WAAK,MAAL;AACOH,QAAAA,WAAW,CAACS,QAAQ,CAACN,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,EAA5B,CAAX;AACP;;AACA,WAAK,MAAL;AACD,WAAK,OAAL;AACCH,QAAAA,WAAW,CAACS,QAAQ,CAACN,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,GAA5B,CAAX;AACA;;AACA,WAAK,OAAL;AACA,WAAK,QAAL;AACOH,QAAAA,WAAW,CAACS,QAAQ,CAACN,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,GAA5B,CAAX;AACP;;AACA,WAAK,MAAL;AACD,WAAK,OAAL;AACQH,QAAAA,WAAW,CAACS,QAAQ,CAACN,WAAW,CAAC,CAAD,CAAZ,CAAR,GAA2B,IAA5B,CAAX;AACN;;AACF;AACMH,QAAAA,WAAW,CAAC,CAAD,CAAX;AACL;AAnBC;;AAqBE,QAAIU,IAAI,CAACC,IAAL,IAAa,SAAjB,EAA4B;AAC/BC,MAAAA,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,IAAI,EAAEJ,IAAI,CAACC,IAAb;AAAmBR,QAAAA,WAAW,EAAEY,IAAhC;AAAsCC,QAAAA,IAAI,EAAEN,IAAI,CAACM;AAAjD,OAAX;AACA;AACF,GA5BD;;AA8BA,sBACE,uDACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAsB,kBAAW,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,KAAK,CAACM,QAAN,CAAeC,GAAf,CAAmBC,IAAI,IAAIA,IAAI,IAAIA,IAAI,CAACU,IAAb,gBAC1B,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCV,IAAI,CAACU,IAA1C,mBAA6D,WAAWV,IAAI,CAACK,IAAL,GAAYT,KAAK,CAACI,IAAI,CAACH,WAAN,CAA5B,CAA7D,OAA+Gc,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACI,IAAI,CAACH,WAAN,CAAjB,CAA/G,UADF,CAD0B,gBAGZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHf,CADH,CADD,CADH,CADF;AAaD;;AAAA;AAED,eAAeN,aAAf","sourcesContent":["import React from \"react\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport './styles.scss';\n\nfunction ListStarships(props) {\n  const [timeCool, setTimeCool] = useState(0);\n  const stops = () => {\n     const consumables = props.allShips.map(item => item && item.consumables ? \n      item.consumables.split(' ') : undefined);\n\n      switch (consumables[1]) {\n\t\t\t\tcase 'day':\n\t\t\t\t\tcase 'days':\n            setTimeCool(parseInt(consumables[0]) * 24);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'week':\n\t\t\t\tcase 'weeks':\n\t\t\t\t\tsetTimeCool(parseInt(consumables[0]) * 168);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'month':\n\t\t\t\t\tcase 'months':\n            setTimeCool(parseInt(consumables[0]) * 730);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\tcase 'years':\n            setTimeCool(parseInt(consumables[0]) * 8760);\n\t\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n          setTimeCool(0);\n\t\t\t\t\tbreak;\n        }\n        if (ship.MGLT != 'unknown') {\n\t\t\t\t\tships.push({ mglt: ship.MGLT, consumables: time, name: ship.name });\n\t\t\t\t}\n  }\n\n  return (\n    <>\n       <section>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          {props.allShips.map(item => item && item.name ? \n            <ListItem className=\"ships\">\n              <ListItemText className=\"shipsName\">{item.name} - Will make {1000000 / (item.MGLT * stops(item.consumables))} {console.log(stops(item.consumables))}stops</ListItemText>\n            </ListItem> : <p></p>)\n          }\n        </List>\n      </section>\n    </>\n  );\n};\n\nexport default ListStarships;"]},"metadata":{},"sourceType":"module"}